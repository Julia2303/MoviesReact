{"version":3,"sources":["components/elements/Arrow.js","components/Header.js","AppReducer.js","MoviesContext.js","storageUtils.js","config.js","components/Pagination.js","utils.js","components/MovieModal.js","components/Modal.js","components/MovieList.js","components/Favourites.js","App.js","index.js"],"names":["ArrowDown","props","width","height","viewBox","xmlns","d","Header","className","to","src","alt","Arrow","state","action","type","favouriteMovies","payload","filter","movie","id","initialState","moviesString","localStorage","getItem","JSON","parse","readFavouriteMovies","MoviesContext","createContext","MoviesProvider","children","useReducer","AppReducer","dispatch","useState","movieList","setMovieList","currentPage","setCurrentPage","totalPages","setTotalPages","currentMovieId","setCurrentMovieId","useEffect","axios","get","then","response","data","results","total_pages","window","scrollTo","stringify","setItem","saveFavouriteMovies","Provider","value","paginate","pageNumber","addToFavourite","checkMovieInFavourites","find","removeFromFavouriteById","Pagination","useContext","removeButton","page","paginationRange","useMemo","onClick","map","number","getImageSrc","posterPath","MovieModal","backdropPath","onClose","onNextMovie","isMovieInFavourites","removeFromFavourite","style","backgroundImage","backdrop_path","poster_path","title","vote_average","toFixed","release_date","overview","Modal","modalRef","useRef","modalElement","current","disableBodyScroll","enableBodyScroll","ref","MovieList","onError","e","currentTarget","currentMovie","movieId","length","nextMovieId","reduce","acc","index","Favourites","onNextMovieClick","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d77a6013.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ArrowDown = props =>\r\n    <svg width=\"25\" height=\"25\" viewBox=\"0 0 10 6\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n        <g>\r\n            <path d=\"M10 1.12737L8.87263 -4.92788e-08L5.16842 3.70421L1.46421 -3.73111e-07L0.336842 1.12737L5.16842 5.95895L10 1.12737Z\" />\r\n        </g>\r\n        <defs>\r\n            <clipPath>\r\n                <path d=\"M10 0L10 6L-2.62268e-07 6L0 -4.37114e-07L10 0Z\" />\r\n            </clipPath>\r\n        </defs>\r\n    </svg>;\r\n\r\nexport default ArrowDown;\r\n","import React from 'react';\r\nimport ArrowDown from './elements/Arrow';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return <header className=\"header\">\r\n        <Link to=\"/\" className=\"header__logo\">\r\n            <img className=\"header__logo-image\" src=\"./images/header-logo.svg\" alt=\"\" />\r\n            <p className=\"header__logo-text\">Movies</p>\r\n        </Link>\r\n        <Link to=\"/favourites\" className=\"header__account-link\">\r\n            <button className=\"header__button\">\r\n                <span className=\"hide-on-mobile\">My Account</span>\r\n                <ArrowDown className=\"header__button-icon\" />\r\n            </button>\r\n        </Link>\r\n    </header>;\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_MOVIE_TO_FAVOURITES':\r\n            return {\r\n                ...state,\r\n                favouriteMovies: [action.payload, ...state.favouriteMovies]\r\n            };\r\n        case 'REMOVE_MOVIE_FROM_FAVOURITE':\r\n            return {\r\n                ...state,\r\n                favouriteMovies: state.favouriteMovies.filter(movie => movie.id !== action.payload)\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n","import React, { createContext, useEffect, useState, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\nimport { apiKey } from './config';\r\nimport { readFavouriteMovies, saveFavouriteMovies } from './storageUtils';\r\n\r\n//initial state\r\nconst initialState = {\r\n    favouriteMovies: readFavouriteMovies('favouriteMovies')\r\n};\r\n\r\n//create context\r\nexport const MoviesContext = createContext(initialState);\r\n\r\n//provider components\r\nexport const MoviesProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [currentMovieId, setCurrentMovieId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(\r\n            `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}&language=en-US&page=${currentPage}`)\r\n            .then(response => {\r\n                setMovieList(response.data.results);\r\n                setTotalPages(response.data.total_pages);\r\n                window.scrollTo(0, 0);\r\n                if (currentMovieId) {\r\n                    setCurrentMovieId(response.data.results[0].id);\r\n                }\r\n            });\r\n    }, [currentPage]);\r\n\r\n    //actions\r\n    const addToFavourite = movie => {\r\n        dispatch({ type: 'ADD_MOVIE_TO_FAVOURITES', payload: movie });\r\n    };\r\n\r\n    const removeFromFavouriteById = id => {\r\n        dispatch({ type: 'REMOVE_MOVIE_FROM_FAVOURITE', payload: id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        saveFavouriteMovies(state.favouriteMovies);\r\n    }, [state]);\r\n\r\n    const checkMovieInFavourites = id => {\r\n        return state.favouriteMovies.find(movie => movie.id === id);\r\n    };\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return <MoviesContext.Provider value={\r\n    {\r\n        movieList,\r\n        setMovieList,\r\n        currentPage,\r\n        setCurrentPage,\r\n        totalPages,\r\n        setTotalPages,\r\n        paginate,\r\n        favouriteMovies: state.favouriteMovies,\r\n        addToFavourite,\r\n        checkMovieInFavourites,\r\n        removeFromFavouriteById,\r\n        currentMovieId,\r\n        setCurrentMovieId\r\n    }\r\n    }\r\n    >\r\n        {children}\r\n    </MoviesContext.Provider>;\r\n};\r\n","export const saveFavouriteMovies = favouriteMovies => {\r\n    const moviesString = JSON.stringify(favouriteMovies);\r\n    localStorage.setItem('favouriteMovies', moviesString);\r\n};\r\n\r\nexport const readFavouriteMovies = () => {\r\n    const moviesString = localStorage.getItem('favouriteMovies');\r\n    if (moviesString) {\r\n        return JSON.parse(moviesString);\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n","export const apiKey = 'ebea8cfca72fdff8d2624ad7bbf78e4c';\r\n","import React, { useContext, useMemo } from 'react';\r\nimport { MoviesContext } from '../MoviesContext';\r\n\r\nconst Pagination = props => {\r\n    const { className } = props;\r\n    const { currentPage, paginate, totalPages } = useContext(MoviesContext);\r\n\r\n    const removeButton = page => {\r\n        if(currentPage >= page) {\r\n            return ' pagination__button--removed';\r\n        } else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    const paginationRange = useMemo(() => {\r\n        if (currentPage === totalPages || currentPage === totalPages - 1) {\r\n            return [totalPages - 1, totalPages];\r\n        }\r\n        return [currentPage, currentPage + 1, currentPage + 2];\r\n    }, [currentPage, totalPages]);\r\n\r\n    const onNext = () => {\r\n        paginate(currentPage + 1);\r\n    };\r\n\r\n    const onPrevious = () => {\r\n        paginate(currentPage - 1);\r\n    };\r\n\r\n    const onFirst = () => {\r\n        paginate(1);\r\n    };\r\n\r\n    const onLast = () => {\r\n        paginate(totalPages);\r\n    };\r\n\r\n    return <div className={`pagination ${className}`}>\r\n\r\n        <button onClick={onFirst} className=\"pagination__button\">First</button>\r\n        <button onClick={onPrevious}\r\n                className={`pagination__button${currentPage === 1 ? ' pagination__button--disabled' : ''}`}\r\n        >\r\n            Prev\r\n        </button>\r\n\r\n        {\r\n            paginationRange.map(number =>\r\n                <button onClick={() => paginate(number)} key={number}\r\n                        className={`pagination__button${currentPage === number ? ' pagination__button--active' : ''}`}\r\n                >\r\n                    <span>{number}</span>\r\n                </button>\r\n            )\r\n        }\r\n\r\n        <button className={`pagination__button${removeButton(totalPages - 2)}`}>...</button>\r\n        <button onClick={onNext} className={`pagination__button${removeButton(totalPages)}`}>Next</button>\r\n        <button onClick={onLast} className={`pagination__button${removeButton(totalPages)}`}>Last</button>\r\n    </div>;\r\n};\r\n\r\nexport default Pagination;\r\n","const baseImgURL = 'https://image.tmdb.org/t/p/w300';\r\nconst baseBackdropURL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport const getImageSrc = posterPath => {\r\n    return `${baseImgURL}${posterPath}`;\r\n};\r\n\r\nexport const getBackdrop = backdropPath => {\r\n    return `${baseBackdropURL}${backdropPath}`;\r\n};\r\n","import React from 'react';\r\nimport { getBackdrop } from '../utils';\r\nimport ArrowDown from './elements/Arrow';\r\nimport { getImageSrc } from '../utils';\r\n\r\nconst MovieModal = props => {\r\n    const { movie, onClose, onNextMovie, isMovieInFavourites, addToFavourite, removeFromFavourite } = props;\r\n\r\n    return <div className=\"movie-modal\" style={{ backgroundImage: `url(${getBackdrop(movie.backdrop_path)})` }}>\r\n        <div className=\"movie-modal__container\">\r\n            <header className=\"movie-modal__header\">\r\n                <div className=\"movie-modal__header-button\" onClick={onClose}>\r\n                    <ArrowDown className=\"movie-modal__header-icon\" />\r\n                    <p className=\"movie-modal__header-button-text\">\r\n                        Back <span className=\"hide-on-mobile\">to List</span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"movie-modal__header-button\" onClick={onNextMovie}>\r\n                    <p className=\"movie-modal__header-button-text\">\r\n                        Next <span className=\"hide-on-mobile\">Movie</span>\r\n                    </p>\r\n                    <ArrowDown className=\"movie-modal__header-icon\" />\r\n                </div>\r\n            </header>\r\n            <div className=\"movie-modal__content\">\r\n                <img className=\"movie-modal__poster\" src={getImageSrc(movie.poster_path)} />\r\n                <div className=\"movie-modal__info\">\r\n                    {\r\n                        isMovieInFavourites\r\n                            ? <button className=\"movie-modal__button\" onClick={removeFromFavourite}>\r\n                                Remove <span className=\"hide-on-mobile\">from favourite</span>\r\n                            </button>\r\n                            : <button className=\"movie-modal__button\" onClick={addToFavourite}>\r\n                                Add <span className=\"hide-on-mobile\">to favourite</span>\r\n                            </button>\r\n                    }\r\n                    <h2 className=\"movie-modal__title\">{movie.title}</h2>\r\n                    <div className=\"movie-modal__details\">\r\n                        <div className=\"movie-modal__score\">\r\n                            <p className=\"movie-modal__details-title\">Score: </p>\r\n                            <p className=\"movie-modal__details-value\">{movie.vote_average.toFixed(1)}</p>\r\n                        </div>\r\n                        <div className=\"movie-modal__release-date\">\r\n                            <p className=\"movie-modal__details-title\">Release Date: </p>\r\n                            <p className=\"movie-modal__details-value\">{movie.release_date}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h2 className=\"movie-modal__title movie-modal__title--mobile\">{movie.title}</h2>\r\n                <div className=\"movie-modal__description-container\">\r\n                    <p className=\"movie-modal__description\">\r\n                        {movie.overview}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default MovieModal;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\n\r\nconst Modal = props => {\r\n    const { children } = props;\r\n    const modalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const modalElement = modalRef.current;\r\n        disableBodyScroll(modalElement);\r\n        return () => enableBodyScroll(modalElement);\r\n    }, []);\r\n\r\n    return <div className=\"modal\" ref={modalRef}>\r\n        {children}\r\n    </div>;\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useContext } from 'react';\r\nimport Pagination from './Pagination';\r\nimport MovieModal from './MovieModal';\r\nimport { getImageSrc } from '../utils';\r\nimport Modal from './Modal';\r\nimport { MoviesContext } from '../MoviesContext';\r\n\r\nconst MovieList = () => {\r\n    const {\r\n        movieList,\r\n        currentPage,\r\n        setCurrentPage,\r\n        checkMovieInFavourites,\r\n        addToFavourite,\r\n        removeFromFavouriteById,\r\n        currentMovieId,\r\n        setCurrentMovieId\r\n    } = useContext(MoviesContext);\r\n\r\n    const onError = e => {\r\n        e.currentTarget.src = './images/movie-poster.jpg';\r\n    };\r\n\r\n    const currentMovie = movieList.find(movie => movie.id === currentMovieId);\r\n    // const currentMovie = useMemo(() => {\r\n    //     movieList.find(movie => movie.id === currentMovieId);\r\n    // }, [currentMovieId]);\r\n\r\n    const onMovieClick = movieId => {\r\n        setCurrentMovieId(movieId);\r\n    };\r\n\r\n    const onNextMovieClick = () => {\r\n        if (currentMovieId === movieList[movieList.length - 1].id) {\r\n            setCurrentPage(currentPage + 1);\r\n        } else {\r\n            const nextMovieId = movieList.reduce((acc, movie, index) => {\r\n                if (currentMovieId === movie.id) {\r\n                    acc = movieList[index + 1].id;\r\n                }\r\n                return acc;\r\n            }, null);\r\n            setCurrentMovieId(nextMovieId);\r\n        }\r\n    };\r\n\r\n    const onAddToFavourite = () => {\r\n        addToFavourite(currentMovie);\r\n    };\r\n\r\n    const onRemoveFromFavourite = () => {\r\n        removeFromFavouriteById(currentMovieId);\r\n    };\r\n\r\n    return <main className=\"main\">\r\n        <p className=\"main__title\">Latest Releases</p>\r\n        <div className=\"movie-list\">\r\n            {\r\n                movieList.map(movie =>\r\n                    <div className=\"movie-list__movie\" key={movie.id}>\r\n                        <img src={getImageSrc(movie.poster_path)}\r\n                             onError={onError}\r\n                             alt=\"\"\r\n                             className=\"movie-list__movie-image\"\r\n                             title={movie.title}\r\n                             onClick={() => onMovieClick(movie.id)}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <Pagination className=\"main__pagination\" />\r\n        {\r\n            currentMovie\r\n                 && <Modal>\r\n                     <MovieModal movie={currentMovie}\r\n                                 onClose={() => setCurrentMovieId(null)}\r\n                                 onNextMovie={onNextMovieClick}\r\n                                 isMovieInFavourites={checkMovieInFavourites(currentMovieId)}\r\n                                 addToFavourite={onAddToFavourite}\r\n                                 removeFromFavourite={onRemoveFromFavourite}\r\n                     />\r\n                 </Modal>\r\n        }\r\n    </main>;\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from 'react';\r\nimport { MoviesContext } from '../MoviesContext';\r\nimport { getImageSrc } from '../utils';\r\nimport Modal from './Modal';\r\nimport MovieModal from './MovieModal';\r\n\r\nconst Favourites = () => {\r\n    const { favouriteMovies, removeFromFavouriteById, checkMovieInFavourites, currentMovieId, setCurrentMovieId } = useContext(MoviesContext);\r\n\r\n    const onMovieClick = movieId => {\r\n        setCurrentMovieId(movieId);\r\n    };\r\n\r\n    const onNextMovieClick = () => {\r\n        if (currentMovieId === favouriteMovies[favouriteMovies.length - 1].id) {\r\n            setCurrentMovieId(favouriteMovies[0].id);\r\n        } else {\r\n            const nextMovieId = favouriteMovies.reduce((acc, movie, index) => {\r\n                if (currentMovieId === movie.id) {\r\n                    acc = favouriteMovies[index + 1].id;\r\n                }\r\n                return acc;\r\n            }, null);\r\n            setCurrentMovieId(nextMovieId);\r\n        }\r\n    };\r\n\r\n    const onRemoveFromFavourite = () => {\r\n        removeFromFavouriteById(currentMovieId);\r\n        if (favouriteMovies.length > 1) {\r\n            onNextMovieClick();\r\n        } else {\r\n            setCurrentMovieId(null);\r\n        }\r\n    };\r\n\r\n    return <main className=\"main\">\r\n        <p className=\"main__title\">My favourite</p>\r\n        <div className=\"favourite-movies\">\r\n            {\r\n                favouriteMovies.map(movie =>\r\n                    <div className=\"favourite-movies__movie\" key={movie.id}>\r\n                        <img src={getImageSrc(movie.poster_path)}\r\n                             alt=\"\"\r\n                             className=\"favourite-movies__image\"\r\n                             title={movie.title}\r\n                             onClick={() => onMovieClick(movie.id)}\r\n                        />\r\n                        <div className=\"favourite-movies__info\">\r\n                            <div className=\"favourite-movies__top-info\">\r\n                                <h2 className=\"favourite-movies__title\">{movie.title}</h2>\r\n                                <button className=\"favourite-movies__button\" onClick={() => removeFromFavouriteById(movie.id)}>Unfavourite</button>\r\n                            </div>\r\n                            <div className=\"favourite-movies__description-container\">\r\n                                <p className=\"favourite-movies__description\">\r\n                                    {movie.overview}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        {\r\n            currentMovieId\r\n            && <Modal>\r\n                <MovieModal movie={favouriteMovies.find(movie => movie.id === currentMovieId)}\r\n                            onClose={() => setCurrentMovieId(null)}\r\n                            onNextMovie={onNextMovieClick}\r\n                            isMovieInFavourites={checkMovieInFavourites(currentMovieId)}\r\n                            removeFromFavourite={onRemoveFromFavourite}\r\n                />\r\n            </Modal>\r\n        }\r\n    </main>;\r\n};\r\n\r\nexport default Favourites;\r\n","import './style/main.scss';\nimport React from 'react';\nimport Header from './components/Header';\nimport MovieList from './components/MovieList';\nimport { Route } from 'react-router-dom';\nimport Favourites from './components/Favourites';\nimport { MoviesProvider } from './MoviesContext';\n\nfunction App() {\n    return <MoviesProvider>\n        <div className=\"app\">\n            <Header />\n            <Route exact path=\"/\" component={MovieList} />\n            <Route path=\"/favourites\" component={Favourites} />\n        </div>\n    </MoviesProvider>\n    ;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}